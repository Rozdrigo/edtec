Hi @mgcostaParedes.

I've tested two codes:

FileSystem.downloadAsync(
  `https://drive.google.com/u/0/uc?id=1qyb8mZ6H7y-78fUilzIEyKpB7mTus5hd&export=download`,
  FileSystem.documentDirectory + 'test.pdf'
).then(({ uri }) => {
  console.log(uri);
  FileSystem.getContentUriAsync(uri).then(cUri => {
    IntentLauncher.startActivityAsync('android.intent.action.VIEW', {
      data: cUri.uri,
      flags: 1,
    });
  });
});
FileSystem.downloadAsync(
  `http://www.fundacionsgae.org/Lists/FSGAE_SalaPrensa_Recursos/Attachments/1/dummy.pdf`,
  FileSystem.documentDirectory + 'test.pdf'
).then(({ uri }) => {
  console.log(uri);
  FileSystem.getContentUriAsync(uri).then(cUri => {
    IntentLauncher.startActivityAsync('android.intent.action.VIEW', {
      data: cUri.uri,
      flags: 1,
    });
  });
});
The first one doesn't work. However, the second one works fine. The only difference between these two snippets is the pdf URL (these URLs pointe to the same file).

So, why the first one doesn't work? The answer is pretty simple. FileSystem.downloadAsync downloads the contents at a remote URI. Hence, when your URI looks like this: https://drive.google.com/u/0/uc?id=1qyb8mZ6H7y-78fUilzIEyKpB7mTus5hd&export=download, the FileSystem will download the HTML content, not the pdf file. In the second case, URI points to file - so the module will download it correctly.

I believe that you struggle with this because you provided an indirect URL to the pdf. To fix it, you need to change the URL. I'm closing this issue right now. However, if what I describe here is not applied in your case, feel free to reopen it ðŸ˜‰